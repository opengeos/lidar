on:
    push:
        branches:
            - master
    pull_request:
        branches:
            - master

name: build
jobs:
    py-check:
        runs-on: ${{ matrix.config.os }}
        name: ${{ matrix.config.os }} (${{ matrix.config.py }})
        strategy:
            fail-fast: false
            matrix:
                config:
                    # - { os: windows-latest, py: "3.7" }
                    # - { os: macOS-latest, py: "3.7" }
                    # - { os: ubuntu-latest, py: "3.6" }
                    - { os: ubuntu-latest, py: "3.8" }
                    - { os: ubuntu-latest, py: "3.9" }
                    - { os: ubuntu-latest, py: "3.10" }
                    # - { os: ubuntu-latest, py: "3.11" }

        env:
            SDKROOT: /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk
        steps:
            - name: CHECKOUT CODE
              uses: actions/checkout@v4
            - name: SETUP PYTHON
              uses: actions/setup-python@v5
              with:
                  python-version: ${{ matrix.config.py }}
            - name: Install GDAL
              run: |
                  python -m pip install --upgrade pip
                  pip install --no-cache-dir Cython
                  pip install --find-links=https://girder.github.io/large_image_wheels --no-cache GDAL
            - name: Test GDAL installation
              run: |
                  python -c "from osgeo import gdal"
                  gdalinfo --version
            - name: Install dependencies
              run: |
                  pip install -r requirements.txt
                  pip install .
            # - name: Install dependencies
            #   run: |
            #       sudo apt-add-repository ppa:ubuntugis/ubuntugis-unstable -y
            #       sudo apt-get -qq update
            #       sudo apt-get install gdal-bin libgdal-dev -y
            #       export CPLUS_INCLUDE_PATH=/usr/include/gdal
            #       export CPLUS_INCLUDE_PATH=/usr/include/gdal
            #       gdal-config --version
            #       gdalinfo --version
            #       python -m pip install --upgrade pip
            #       pip install wheel
            #       pip install --user --no-cache-dir Cython
            #       pip install --user -r requirements.txt
            #       pip install pygdal==3.3.2.10
            #   pip install pygdal==$(gdal-config --version | awk -F'[.]' '{print $1"."$2}')
            #   pip install --user -r requirements_dev.txt
            #   python -m pip install --upgrade pip
            - name: lidar-TEST
              run: |
                  python -m unittest discover tests/
